services:      
  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
      
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: ${MongoDb_CONN_STR}
      ME_CONFIG_BASICAUTH: false
      
  learnifydb:
    container_name: learnifydb
    restart: always
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER_LEARNIFY}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_LEARNIFY}
      POSTGRES_DB: ${POSTGRES_DB_LEARNIFY}
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  
  learnify.api:
    image: ${DOCKER_REGISTRY-}learnify.api
    build:
      context: .
      dockerfile: src/Learnify/Learnify.Api/Dockerfile
    depends_on: 
      - learnifydb
      - rabbitmq
      - mongo
    environment:
      - ASPNETCORE_URLS=http://*:80
      - AllowedOrigins=${AllowedOrigins}
      - BlobStorageSettings__ConnectionString=${AZURE_CONNECTION_STRING}
      - GoogleAuthSettings__ClientId=${GoogleAuthSettingsClientId}
      - GoogleAuthSettings__ClientSecret=${GoogleAuthSettingsClientSecret}
      - JwtSettings__Key=${JwtSettingsKey}
      - JwtSettings__Expire=${JwtSettingsExpire}
      - JwtSettings__Audience=${JwtSettingsAudience}
      - JwtSettings__Issuer=${JwtSettingsIssuer}
      - ConnectionStrings__DefaultConnection=${LEARNIFY_DB_CONN_STR}
      - ConnectionStrings__MongoDb=${MongoDb_CONN_STR}
      - ConnectionStrings__RedisCache=${RedisCache_CONN_STR}
      - MailConfig__Mail=${MailCfg_Mail}
      - MailConfig__DisplayName=${MailCfg_Mail}
      - MailConfig__Password=${MailCfg_Password}
      - MailConfig__Host=${MailCfg_Host}
      - MailConfig__Port=${MailCfg_Port}
      - MongoDatabase__DatabaseName=${Mongo_DbName}
      - MongoDatabase__ViewsCollectionName=${Mongo_ViewsCollectionName}
      - MongoDatabase__CoursesCollectionName=${Mongo_CoursesCollectionName}
      - MongoDatabase__LessonsCollectionName=${Mongo_LessonsCollectionName}
      - EncryptionOptions__Key=${Encryption_Key}
      - EncryptionOptions__IV=${Encryption_IV}
      - RabbitMq__Host=${RABBITMQ_HOST}
      - StripeOptions__PublicKey=${StripeOptions_PublicKey}
      - StripeOptions__SecretKey=${StripeOptions_SecretKey}
      - StripeOptions__WHSecret=${StripeOptions_WHSecret}
      - Vonage__Api.Key=${Vonage_Api_Key}
      - Vonage__Api.Secret=${Vonage_Api_Secret}
      - Vonage__Application.Id=${Vonage_Application_Id}
      - Vonage__Application.Key=${Vonage_Application_Key}
    ports:
      - "5000:80"
        
#  learnify.subtitles:
#    image: ${DOCKER_REGISTRY-}learnify.subtitles
#    build:
#      context: ./src/Learnify.Subtitles
#      dockerfile: Dockerfile
#    depends_on:
#      - rabbitmq
#    environment:
#      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
#      - RABBITMQ_HOST=${RABBITMQ_HOST}
#      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
#      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
#      - RABBITMQ_SUBTITLES_QUEUE=${RABBITMQ_SUBTITLES_QUEUE}
#      - RABBITMQ_SUBTITLES_QUEUE_RESPONSE=${RABBITMQ_SUBTITLES_QUEUE_RESPONSE}
#      - SUBTITLES_CONTAINER=${SUBTITLES_CONTAINER}
#    ports:
#      - "5001:80"
        
  learnify.translate:
    image: ${DOCKER_REGISTRY-}learnify.translate
    build:
      context: ./src/Learnify.Translate
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_TRANSLATE_QUEUE=${RABBITMQ_TRANSLATE_QUEUE}
      - RABBITMQ_TRANSLATE_QUEUE_RESPONSE=${RABBITMQ_TRANSLATE_QUEUE_RESPONSE}
    ports:
      - "5002:80"

  learnify.summary:
    image: ${DOCKER_REGISTRY-}learnify.summary
    build:
      context: ./src/Learnify.Summary
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_SUMMARIES_QUEUE=${RABBITMQ_SUMMARIES_QUEUE}
      - RABBITMQ_SUMMARIES_QUEUE_RESPONSE=${RABBITMQ_SUMMARIES_QUEUE_RESPONSE}
      - SUMMARIES_CONTAINER=${SUMMARIES_CONTAINER}
      - GEMINI_KEY=${GEMINI_KEY}
    ports:
      - "5003:80"

  learnify.client:
    image: ${DOCKER_REGISTRY-}learnify.client
    build:
      context: ./front/client
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - BaseApiUrl=${BaseApiUrl}
      - BaseMediaUrl=${BaseMediaUrl}
      - PaymentSuccessUrl=${PaymentSuccessUrl}
      - PaymentCancelUrl=${PaymentCancelUrl}
      - VonageApplicationId=${Vonage_Application_Id}
    ports:
      - "4200:80"


#  storageemulator:
#    image: mcr.microsoft.com/azure-storage/azurite
#    hostname: azurite
#    restart: always
#    command: "azurite-blob --blobHost 0.0.0.0 --blobPort 10000"
#    ports:
#      - "10000:10000"

volumes:
  postgres_data: